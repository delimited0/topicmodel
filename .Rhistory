Map(test, list(1,2,3,4), list(1,2,3,4))
word
c(0,0,0,1,0,1,0,0)
which(c(0,0,0,1,0,1,0,0) > 0)
word
exp(c(1,2,3))
test = matrix(data=c(1,2,3,4), nrow=2, ncol=2)
test
replicate(2,c(1,2))
?replicate
help(replicate)
?apply
apply(test, 1, sum)
apply(test, 1, x/sum(x))
apply(test, 1, function(x){x/sum(x)})
test
apply(test, 2, function(x){x/sum(x)})
apply(test, 1, function(x){x/sum(x)})
sweep(test, 1, rowSums(test), FUN="/")
test
1/rowSums(test)
diag(1/rowSums(test))
test %*% diag(1/rowSums(test))
test
t(test) %*% diag(1/rowSums(test))
t(t(test) %*% diag(1/rowSums(test)))
scale(test, center=FALSE, scale=rowSums(test))
tets
test
wordcloud
library(lubridate)
library(tm)
library(stringr)
source("dataFuncs.R")
library(lubridate)
library(tm)
library(stringr)
source("../dataFuncs.R")
pwd
pwd()
path()
?source
source('~/Documents/Projects/TopicModel/loadData.R', echo=TRUE)
opinion <- readArticles("/Users/patrickding/Documents/Projects/TopicModel/opinion.csv")
opinion[1,]
opinion[2,]
opinion[2,]$italic
opinion[2,]$article
source("/Users/patrickding/Documents/Projects/TopicModel/dataFuncs.R")
opinion <- readArticles("/Users/patrickding/Documents/Projects/TopicModel/opinion.csv")
opinion[1,]
opinion[1,]$italic
opinion[1,]$italic == " "
opinion[1,]$italic == "  "
opinion[1,]$italic == "   "
opinion[1,]$italic == "\et"
opinion[1,]$italic == "\t"
opinion[1000,]$italic == "\t"
opinion[1000,]$italic
opinion[2000,]$italic
opinion[200,]$italic
opinion[2001,]$italic
opinion[3001,]$italic
!%in
3 !%in c(3,4,5)
!(3 %in c(33442))
!(3 %in% c(33442))
3 !%in% c(3,4,5)
3 !(%in% c(3,4,5))
View(opinion)
colnames(opinion)
opinion$kicker
View(opinion$kicker)
cartoon_idx <- str_detect(opinion$kicker, ignore.case("cartoon"))
cartoon_idx
opinion$kicker
cartoon_idx
cartoon_idx[7322]
cartoon_idx[7322]
cartoon_idx[7323]
opinion$kicker[7323]
opinion$kicker
opinion$kicker[1000:2000]
opinion[1461,]
opinion[1462,]
opinion[1460,]
opinion$kicker[2000:3000]
opinion$kicker[3000:4000]
opinion$kicker[4000:5000]
opinion$kicker[5000:6000]
opinion.docs <- transformCorpus(Corpus(VectorSource(opinion$article[!cartoon_idx])))
length(opinion.docs)
opinion.dtm <- DocumentTermMatrix(opinion.docs)
dim(opinion.dtm)
opinion.dtm.count <- rowSums(as.matrix(opinion.dtm))
sum(opinion.dtm.count==0)
opinion.dtm.zero.idx <- which(opinion.dtm.count == 0)
opinion.docs <- Corpus(VectorSource(opinion$article[-opinion.dtm.zero.idx]))
opinion.dtm <- DocumentTermMatrix(transformCorpus(opinion.docs))
period_identity <- function(dates, level) {
# periodIdentity
# Creates vector of period identities, such that documents with same
# level are assigned to the same period
# Requires lubridate
# dates - vector, dates
# level - function, that gets time level from a date. eg, "month"
dates <- dates[order(dates)]
identity <- rep(1, length(dates))
currIdentity <- 1
prevLevel <- level(dates[1])
for (i in 2:length(dates)) {
currLevel <- level(dates[i])
if (currLevel != prevLevel)
currIdentity <- currIdentity + 1
identity[i] <- currIdentity
prevLevel <- currLevel
}
return(identity)
}
period_identity(opinion, "monht")
period_identity(opinion, "month")
period_identity(opinion$date, "month")
level
factor
level
base::level
foo = period_identity(opinion$date, month)
foo
dir()
ls9)
ls()
opinion <- readArticles("/Users/patrickding/Documents/Projects/TopicModel/opinion.csv")
opinion_docs <- transformCorpus(Corpus(VectorSource(opinion$article)))
rm(opinion.docs)
rm(opinion.dtm)
opinion_dtm <- DocumentTermMatrix(opinion_docs)
opinion_dtm_count <- rowSums(as.matrix(opinion_dtm))
opinion_dtm_zero_idx <- which(opinion_dtm_count == 0)
opinion_docs <- Corpus(VectorSource(opinion$article[-opinion_dtm_zero_idx]))
opinion_dtm <- DocumentTermMatrix(opinion_docs)
dim(opinion_dtm)
opinion_docs <- Corpus(VectorSource(opinion$article[-opinion_dtm_zero_idx,]))
opinion_docs <- transformCorpus(Corpus(VectorSource(opinion$article[-opinion_dtm_zero_idx])))
opinion_dtm <- DocumentTermMatrix(opinion_docs)
dim(opinion_dtm)
period
periods
document
doc
opinion_dtm[1,]
typeof(opinion_dtm[1,])
is.object(opinion_dtm[1,])
isS4(opinion_dtm[1,])
class(opinion_dtm[1,])
class(opinion_dtm[1,]) == "DocumentTermMatrix"
if(class(opinion_dtm[1,]) == "DocumentTermMatrix")
print(hi)
library(topicmodels)
?dtm2ldaformat
opinion_docs <- transformCorpus(Corpus(VectorSource(opinion$article)))
opinion_dtm <- DocumentTermMatrix(opinion_docs)
opinion_dtm_count <- rowSums(as.matrix(opinion_dtm))
opinion_dtm_zero_idx <- which(opinion_dtm_count == 0)
opinion_dat = dtm2ldaformat(opinion_dtm)
dim(opinion_dat[1])
dim(opinion_dat[[1])
dim(opinion_dat[[1]])
dim(opinion_dat[[2]])
opinion_dat[[1]]
length(opinion_dat[[1]])
opinion_dat[[1]][1]
library(lda)
?lexicalize
opinion_dat$vocav
opinion_dat$vocab
opinion_dat$vocab[1]
opinion_dat$vocab[2]
opinion_dat$vocab[3]
opinion_dat$vocab[4]
opinion_dat$vocab[5]
opinion_dat$vocab[6]
opinion_dat$vocab[7]
opinion_dat$vocab[10]
opinion_dat$vocab[100]
opinion_dat$vocab[120]
opinion_dat$vocab[130]
opinion_dat$documents[[2]][1]
opinion_dat$documents[[1]]
opinion_dat$documents[[2]]
class(opinion_dat)
class("DocumentTermMatrix")
typeof(opinion_dat$documents[[1]])
class(opinion_dat$documents[[1]])
class(opinion_dat$documents)
?Map
length(opinion_dat$vocab)
dim(opinion_dtm)
union(opinion_dat$documents[1,])
union(Map(function(x){x[1,]}, opinion_dat$documents))
union(Map(function(x){x}, opinion_dat$documents))
?"union"
opinion_dat$documents[[1]][1,]
opinion_dat$documents[[1]][1000,]
opinion_dat$documents[[1000]][1,]
opinion_dat$documents[[6000]][1,]
union
Reduce(union, Map(function(x){x[1,]}, opinion_dat$documents))
length(Reduce(union, Map(function(x){x[1,]}, opinion_dat$documents)))
class(opinion_dat)
docs$documents
corpus
length(opinion_dat$documents)
max(Map(function(x){sum(x[2,])}, opinion_dat$documents)
)
max(Map(function(x){sum(x[2,])}, opinion_dat$documents))
Reduce(max, Map(function(x){sum(x[2,])}, opinion_dat$documents))
Map(function(x){sum(x[2,])}, opinion_dat$documents)
unlist(Map(function(x){sum(x[2,])}, opinion_dat$documents))
max(unlist(Map(function(x){sum(x[2,])}, opinion_dat$documents)))
Reduce(max, Map(function(x){sum(x[2,])}, opinion_dat$documents))
max(unlist(Map(function(x){sum(x[2,])}, opinion_dat$documents)))
periods
foo
vector(mode="list", length=3)
p
opinion_dat
documents[[foo==1]]
corpus$documents[[foo==1]]
opinion_dat$documents[[foo==1]]
?Filter
bar
bar = list(3,4,5,2,5,6,2)
bar
bar[[3:5]]
bar[3:5]
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t()
baz = corpus_seq_t(opinion_dat, periods)
baz = corpus_seq_t(opinion_dat, foo)
source('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
Map(function(x){sum(x[2,])},
opinion_dat$documents)
Reduce(max, Map(function(x){sum(x[2,])},
opinion_dat$documents))
baz = corpus_seq_t(opinion_dat, foo)
source('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
baz = corpus_seq_t(opinion_dat, foo)
class(doc)
class(doc) != "matrix"
baz = corpus_seq_t(opinion_dat, foo)
docs_by_period[[1]]
docs_by_period[[2]]
Reduce(min, Map(function(x){length(x)},docs_by_period[[2]]))
Reduce(ax, Map(function(x){length(x)},docs_by_period[[2]]))
Reduce(max, Map(function(x){length(x)},docs_by_period[[2]]))
Reduce(max, Map(function(x){length(x)},docs_by_period))
Reduce(min, Map(function(x){length(x)},docs_by_period))
Map(function(x){length(x)},docs_by_period)
baz = corpus_seq_t(opinion_dat, foo)
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
doc
typeof(doc)
class(doc)
class(doc)
class(doc) == "matrix"
source('~/Documents/Projects/TopicModel/dtm/data.R')
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
source('~/Documents/Projects/TopicModel/dtm/data.R')
opinion_dat$documents[[148]]
class(opinion_dat$documents[[148]])
opinion_dat$documents[[148]][1,]
rep(1,0)
source('~/Documents/Projects/TopicModel/dtm/data.R')
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
NULL
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
docs_by_period[[148]]
docs_by_period[[147]]
docs_by_period[[1]]
docs_by_period[[2]]
docs_by_period[[3]]
docs_by_period[[4]]
unique(periods)
unique(foo)
foo == 1
which(foo == 1)
which(foo == 148)
which(foo == 147)
which(foo == 146)
which(foo == 145)
which(foo == 144)
which(foo == 143)
which(foo == 142)
which(foo == 141)
periods==p
foo==1000
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
p
periods==p
length(corpus$documents)
length(foo)
dim(opinion_dtm)
opinion_dtm_count <- rowSums(as.matrix(opinion_dtm))
opinion_dtm_zero_idx <- which(opinion_dtm_count == 0)
periods = period_identity(opinion$date[-opinion_dtm_zero_idx])
periods = period_identity(opinion$date[-opinion_dtm_zero_idx], month)
periods
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
docs_by_period
docs_by_period[[148]]
docs_by_period[[147]]
docs_by_period[[14]]
docs_by_period[[146]]
p
periods
rm(foo)
baz = corpus_seq_t(opinion_dat, periods)
baz
names(baz)
baz$len
baz$corpi
baz$corpi$docs[[1]]
baz$corpi$docs[[2]]
baz$corpi$docs
baz$corpi[[1]]
baz$corpi[[1]]$docs
baz$corpi[[1]]$docs[[1]]
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, periods)
source('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
vector(mode="numeric", length=3)
source('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
Rcpp::sourceCpp('Documents/Projects/TopicModel/dtm/lda.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/dtm/lda.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/dtm/lda.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/dtm/lda.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/dtm/lda.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/dtm/lda.cpp')
system('pwd')
Rcpp::sourceCpp('Documents/Projects/TopicModel/topicmodel/lda_vem.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/topicmodel/lda_vem.cpp')
3.3 + 3.7 + 4 + 3 + 3.7 + 4 + 3 + 3.7 + 3.7 + 3.3 + 3.7 + 3.7 + 4 + 3.3 + 3 + 3.3 + 3.3 + 3.7 + 3.7 + 3.3 + 3.7 + 4 + 3.7 + 3.7 + 3 + 3 + 4 + 3.3 + 3.7 + 4 + 4 + 4
114.5/32
114.5/31
Rcpp::sourceCpp('Documents/Projects/TopicModel/topicmodel/lda_gibbs.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/topicmodel/lda_gibbs.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/topicmodel/lda_gibbs.cpp')
library(lubridate)
library(tm)
library(stringr)
source("/Users/patrickding/Documents/Projects/TopicModel/dataFuncs.R")
source("/Users/patrickding/Documents/Projects/TopicModel/dtm_funcs.R")
data(acq)
Rcpp::sourceCpp('Documents/Projects/TopicModel/topicmodel/lda_gibbs.cpp')
source('~/Documents/Projects/TopicModel/topicmodel/lda.R')
acq_lda <- lda(DocumentTermMatrix(acq), K=10, method="gibbs")
acq_lda$beta
class(acq_lda)
opinion <- readArticles("/Users/patrickding/Documents/Projects/TopicModel/opinion.csv")
#cartoon_idx <- str_detect(opinion$kicker, ignore.case("cartoon"))
#keep.idx <- opinion$article != "  " # cartoons have no text, drop them
#opinion.docs <- transformCorpus(Corpus(VectorSource(opinion$article[!cartoon_idx])))
opinion.docs <- transformCorpus(Corpus(VectorSource(opinion$article)))
opinion.dtm <- DocumentTermMatrix(opinion.docs)
opinion.dtm.count <- rowSums(as.matrix(opinion.dtm))
opinion.dtm.zero.idx <- opinion.dtm.count == 0
opinion.docs <- transformCorpus(Corpus(VectorSource(opinion$article[!opinion.dtm.zero.idx])))
opinion.dtm <- DocumentTermMatrix(opinion.docs)
opinion.dtm <- removeSparseTerms(opinion.dtm, sparse=.99)
opinion_lda <- lda(dtm=opinion.dtm, K = 10, method = "gibbs")
rowSums(opinion_lda$beta)
colSums(opinion_lda$beta)
setwd("~/Documents/Projects/TopicModel/topicmodel")
Rcpp::sourceCpp('posterior_stats.cpp')
Rcpp::sourceCpp('posterior_stats.cpp')
source('~/Documents/Projects/TopicModel/topicmodel/posterior_stats.R')
# load prince opinion test data
library(lubridate)
library(tm)
library(stringr)
source("/Users/patrickding/Documents/Projects/TopicModel/dataFuncs.R")
source("/Users/patrickding/Documents/Projects/TopicModel/dtm_funcs.R")
Rcpp::sourceCpp('posterior_stats.cpp')
data(acq)
acq_dtm <- DocumentTermMatrix(acq)
Rcpp::sourceCpp('lda_gibbs.cpp')
source('~/Documents/Projects/TopicModel/topicmodel/lda.R')
acq_lda <- lda(acq_dtm, K=5, method="gibbs")
Rcpp::sourceCpp('lda_gibbs.cpp')
acq_lda <- lda(acq_dtm, K=5, method="gibbs")
Rcpp::sourceCpp('lda_gibbs.cpp')
Rcpp::sourceCpp('lda_gibbs.cpp')
acq_lda <- lda(acq_dtm, K=5, method="gibbs")
acq_lda$z
get_terms(acq_lda, 10)
get_topics(acq_lda, 10)
source('~/Documents/Projects/TopicModel/topicmodel/posterior_stats.R')
get_topics(acq_lda, 10)
source('~/Documents/Projects/TopicModel/topicmodel/posterior_stats.R')
get_topics(acq_lda, 10)
get_topics(acq_lda, 10)
View(term_score)
get_topics(acq_lda, 10)
order(vocab_mat[,1])
order(vocab_mat[,1], descending=TRUE)
order(term_score[,1], descending=TRUE)
Rcpp::sourceCpp('lda_gibbs.cpp')
rm(order)
get_topics(acq_lda, 10)
get_topics(acq_lda, 10)
source('~/Documents/Projects/TopicModel/topicmodel/posterior_stats.R')
get_topics(acq_lda, 10)
get_topics(acq_lda, 20)
aca_lda_vb = lda(acq_dtm, K=5, method="vb")
Rcpp::sourceCpp('lda_vb.cpp')
aca_lda_vb = lda(acq_dtm, K=5, method="vb")
get_topics(acq_lda, 20)
get_topics(acq_lda_vb, 20)
get_topics(aca_lda_vb, 20)
acq_lda_vb = lda(acq_dtm, K=5, method="vb")
acq_lda_vb$e_log_beta
Rcpp::sourceCpp('lda_vb.cpp')
Rcpp::sourceCpp('lda_vb.cpp')
acq_lda_vb$lambda
size(acq_lda_vb$lambda)
dim(acq_lda_vb$lambda)
Rcpp::sourceCpp('lda_vb.cpp')
Rcpp::sourceCpp('lda_vb.cpp')
acq_lda_vb = lda(acq_dtm, K=5, method="vb")
acq_lda_vb$beta
acq_lda_vb$lambda / rowSums(acq_lda_vb$lambda)
rowSums(acq_lda_vb$lambda)
length(rowSums(acq_lda_vb$lambda))
Rcpp::sourceCpp('lda_vb.cpp')
acq_lda_vb = lda(acq_dtm, K=5, method="vb")
acq_lda_vb$beta
get_topics(acq_lda_vb, 10)
get_topics(acq_lda_vb, 20)
acq_lda$theta
2245/365
Rcpp::sourceCpp('lda_gibbs.cpp')
acq_lda_gibbs <- lda(acq_dtm, K=5, method="gibbs")
acq_lda_gibbs$z
acq_lda_gibbs$beta
acq_lda_gibbs$beta[1,]
plot(acq_lda_gibbs$beta[1,])
plot(acq_lda_gibbs$beta[12,])
plot(acq_lda_gibbs$beta[3,])
plot(acq_lda_gibbs$beta[4,])
plot(acq_lda_gibbs$beta[5,])
plot(acq_lda_gibbs$beta[6,])
plot(acq_lda_gibbs$beta[10,])
plot(acq_lda_gibbs$beta[11,])
plot(acq_lda_gibbs$beta[110,])
plot(acq_lda_gibbs$beta[1100,])
get_topics(acq_lda_gibbs, 10)
get_topics(acq_lda_vb, 10)
plot(acq_lda_vb$beta[1,])
plot(acq_lda_gibbs$beta[1,])
sum(acq_lda_gibbs$beta[1,])
sum(acq_lda_vb$beta[1,])
dim(acq_lda_vb$beta)
dim(acq_lda_gibbs$beta)
testmat = matrix(data=1:4, nrow=2, ncol=2)
testmat
sum(testmat)
acq_lda_vb$beta[1,]
acq_lda_vb$beta[,1]
sum(acq_lda_vb$beta[,1])
Rcpp::sourceCpp('lda_vb.cpp')
acq_lda_vb = lda(acq_lda, K=5, method="vb")
acq_lda_vb = lda(acq_dtm, K=5, method="vb")
acq_lda_vb$beta
colSums(acq_lda_vb$beta)
colSums(acq_lda_gibbs$beta)
acq_lda_gibbs$beta[1,]
sum(acq_lda_gibbs$beta[1,])
sum(acq_lda_gibbs$beta[,1])
get_topics(acq_lda_vb, 5)
get_topics(acq_lda_gibbs, 5)
get_topics(acq_lda_gibbs, 10)
get_topics(acq_lda_vb, 10)
Rcpp::sourceCpp('lda_gibbs.cpp')
